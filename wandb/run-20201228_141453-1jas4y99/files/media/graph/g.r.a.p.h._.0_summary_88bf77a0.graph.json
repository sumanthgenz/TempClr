{"format": "torch", "nodes": [{"name": "_cnn1", "id": 139921509557968, "class_name": "Conv2d(1, 3, kernel_size=(3, 3), stride=(1, 1))", "parameters": [["weight", [3, 1, 3, 3]], ["bias", [3]]], "output_shape": [[6, 3, 111, 998]], "num_parameters": [27, 3]}, {"name": "_efficientnet", "id": 139919429258896, "class_name": "EfficientNet(\n  (_conv_stem): Conv2dStaticSamePadding(\n    3, 32, kernel_size=(3, 3), stride=(2, 2), bias=False\n    (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n  )\n  (_bn0): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n  (_blocks): ModuleList(\n    (0): MBConvBlock(\n      (_depthwise_conv): Conv2dStaticSamePadding(\n        32, 32, kernel_size=(3, 3), stride=[1, 1], groups=32, bias=False\n        (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n      )\n      (_bn1): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_se_reduce): Conv2dStaticSamePadding(\n        32, 8, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_se_expand): Conv2dStaticSamePadding(\n        8, 32, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_project_conv): Conv2dStaticSamePadding(\n        32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn2): BatchNorm2d(16, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_swish): MemoryEfficientSwish()\n    )\n    (1): MBConvBlock(\n      (_expand_conv): Conv2dStaticSamePadding(\n        16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn0): BatchNorm2d(96, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_depthwise_conv): Conv2dStaticSamePadding(\n        96, 96, kernel_size=(3, 3), stride=[2, 2], groups=96, bias=False\n        (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n      )\n      (_bn1): BatchNorm2d(96, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_se_reduce): Conv2dStaticSamePadding(\n        96, 4, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_se_expand): Conv2dStaticSamePadding(\n        4, 96, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_project_conv): Conv2dStaticSamePadding(\n        96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn2): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_swish): MemoryEfficientSwish()\n    )\n    (2): MBConvBlock(\n      (_expand_conv): Conv2dStaticSamePadding(\n        24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn0): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_depthwise_conv): Conv2dStaticSamePadding(\n        144, 144, kernel_size=(3, 3), stride=(1, 1), groups=144, bias=False\n        (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n      )\n      (_bn1): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_se_reduce): Conv2dStaticSamePadding(\n        144, 6, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_se_expand): Conv2dStaticSamePadding(\n        6, 144, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_project_conv): Conv2dStaticSamePadding(\n        144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn2): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_swish): MemoryEfficientSwish()\n    )\n    (3): MBConvBlock(\n      (_expand_conv): Conv2dStaticSamePadding(\n        24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn0): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_depthwise_conv): Conv2dStaticSamePadding(\n        144, 144, kernel_size=(5, 5), stride=[2, 2], groups=144, bias=False\n        (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n      )\n      (_bn1): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_se_reduce): Conv2dStaticSamePadding(\n        144, 6, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_se_expand): Conv2dStaticSamePadding(\n        6, 144, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_project_conv): Conv2dStaticSamePadding(\n        144, 40, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn2): BatchNorm2d(40, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_swish): MemoryEfficientSwish()\n    )\n    (4): MBConvBlock(\n      (_expand_conv): Conv2dStaticSamePadding(\n        40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn0): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_depthwise_conv): Conv2dStaticSamePadding(\n        240, 240, kernel_size=(5, 5), stride=(1, 1), groups=240, bias=False\n        (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n      )\n      (_bn1): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_se_reduce): Conv2dStaticSamePadding(\n        240, 10, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_se_expand): Conv2dStaticSamePadding(\n        10, 240, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_project_conv): Conv2dStaticSamePadding(\n        240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn2): BatchNorm2d(40, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_swish): MemoryEfficientSwish()\n    )\n    (5): MBConvBlock(\n      (_expand_conv): Conv2dStaticSamePadding(\n        40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn0): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_depthwise_conv): Conv2dStaticSamePadding(\n        240, 240, kernel_size=(3, 3), stride=[2, 2], groups=240, bias=False\n        (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n      )\n      (_bn1): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_se_reduce): Conv2dStaticSamePadding(\n        240, 10, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_se_expand): Conv2dStaticSamePadding(\n        10, 240, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_project_conv): Conv2dStaticSamePadding(\n        240, 80, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn2): BatchNorm2d(80, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_swish): MemoryEfficientSwish()\n    )\n    (6): MBConvBlock(\n      (_expand_conv): Conv2dStaticSamePadding(\n        80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn0): BatchNorm2d(480, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_depthwise_conv): Conv2dStaticSamePadding(\n        480, 480, kernel_size=(3, 3), stride=(1, 1), groups=480, bias=False\n        (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n      )\n      (_bn1): BatchNorm2d(480, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_se_reduce): Conv2dStaticSamePadding(\n        480, 20, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_se_expand): Conv2dStaticSamePadding(\n        20, 480, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_project_conv): Conv2dStaticSamePadding(\n        480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn2): BatchNorm2d(80, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_swish): MemoryEfficientSwish()\n    )\n    (7): MBConvBlock(\n      (_expand_conv): Conv2dStaticSamePadding(\n        80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn0): BatchNorm2d(480, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_depthwise_conv): Conv2dStaticSamePadding(\n        480, 480, kernel_size=(3, 3), stride=(1, 1), groups=480, bias=False\n        (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n      )\n      (_bn1): BatchNorm2d(480, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_se_reduce): Conv2dStaticSamePadding(\n        480, 20, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_se_expand): Conv2dStaticSamePadding(\n        20, 480, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_project_conv): Conv2dStaticSamePadding(\n        480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn2): BatchNorm2d(80, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_swish): MemoryEfficientSwish()\n    )\n    (8): MBConvBlock(\n      (_expand_conv): Conv2dStaticSamePadding(\n        80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn0): BatchNorm2d(480, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_depthwise_conv): Conv2dStaticSamePadding(\n        480, 480, kernel_size=(5, 5), stride=[1, 1], groups=480, bias=False\n        (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n      )\n      (_bn1): BatchNorm2d(480, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_se_reduce): Conv2dStaticSamePadding(\n        480, 20, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_se_expand): Conv2dStaticSamePadding(\n        20, 480, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_project_conv): Conv2dStaticSamePadding(\n        480, 112, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn2): BatchNorm2d(112, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_swish): MemoryEfficientSwish()\n    )\n    (9): MBConvBlock(\n      (_expand_conv): Conv2dStaticSamePadding(\n        112, 672, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn0): BatchNorm2d(672, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_depthwise_conv): Conv2dStaticSamePadding(\n        672, 672, kernel_size=(5, 5), stride=(1, 1), groups=672, bias=False\n        (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n      )\n      (_bn1): BatchNorm2d(672, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_se_reduce): Conv2dStaticSamePadding(\n        672, 28, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_se_expand): Conv2dStaticSamePadding(\n        28, 672, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_project_conv): Conv2dStaticSamePadding(\n        672, 112, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn2): BatchNorm2d(112, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_swish): MemoryEfficientSwish()\n    )\n    (10): MBConvBlock(\n      (_expand_conv): Conv2dStaticSamePadding(\n        112, 672, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn0): BatchNorm2d(672, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_depthwise_conv): Conv2dStaticSamePadding(\n        672, 672, kernel_size=(5, 5), stride=(1, 1), groups=672, bias=False\n        (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n      )\n      (_bn1): BatchNorm2d(672, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_se_reduce): Conv2dStaticSamePadding(\n        672, 28, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_se_expand): Conv2dStaticSamePadding(\n        28, 672, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_project_conv): Conv2dStaticSamePadding(\n        672, 112, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn2): BatchNorm2d(112, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_swish): MemoryEfficientSwish()\n    )\n    (11): MBConvBlock(\n      (_expand_conv): Conv2dStaticSamePadding(\n        112, 672, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn0): BatchNorm2d(672, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_depthwise_conv): Conv2dStaticSamePadding(\n        672, 672, kernel_size=(5, 5), stride=[2, 2], groups=672, bias=False\n        (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n      )\n      (_bn1): BatchNorm2d(672, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_se_reduce): Conv2dStaticSamePadding(\n        672, 28, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_se_expand): Conv2dStaticSamePadding(\n        28, 672, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_project_conv): Conv2dStaticSamePadding(\n        672, 192, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn2): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_swish): MemoryEfficientSwish()\n    )\n    (12): MBConvBlock(\n      (_expand_conv): Conv2dStaticSamePadding(\n        192, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn0): BatchNorm2d(1152, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_depthwise_conv): Conv2dStaticSamePadding(\n        1152, 1152, kernel_size=(5, 5), stride=(1, 1), groups=1152, bias=False\n        (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n      )\n      (_bn1): BatchNorm2d(1152, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_se_reduce): Conv2dStaticSamePadding(\n        1152, 48, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_se_expand): Conv2dStaticSamePadding(\n        48, 1152, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_project_conv): Conv2dStaticSamePadding(\n        1152, 192, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn2): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_swish): MemoryEfficientSwish()\n    )\n    (13): MBConvBlock(\n      (_expand_conv): Conv2dStaticSamePadding(\n        192, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn0): BatchNorm2d(1152, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_depthwise_conv): Conv2dStaticSamePadding(\n        1152, 1152, kernel_size=(5, 5), stride=(1, 1), groups=1152, bias=False\n        (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n      )\n      (_bn1): BatchNorm2d(1152, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_se_reduce): Conv2dStaticSamePadding(\n        1152, 48, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_se_expand): Conv2dStaticSamePadding(\n        48, 1152, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_project_conv): Conv2dStaticSamePadding(\n        1152, 192, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn2): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_swish): MemoryEfficientSwish()\n    )\n    (14): MBConvBlock(\n      (_expand_conv): Conv2dStaticSamePadding(\n        192, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn0): BatchNorm2d(1152, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_depthwise_conv): Conv2dStaticSamePadding(\n        1152, 1152, kernel_size=(5, 5), stride=(1, 1), groups=1152, bias=False\n        (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n      )\n      (_bn1): BatchNorm2d(1152, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_se_reduce): Conv2dStaticSamePadding(\n        1152, 48, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_se_expand): Conv2dStaticSamePadding(\n        48, 1152, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_project_conv): Conv2dStaticSamePadding(\n        1152, 192, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn2): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_swish): MemoryEfficientSwish()\n    )\n    (15): MBConvBlock(\n      (_expand_conv): Conv2dStaticSamePadding(\n        192, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn0): BatchNorm2d(1152, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_depthwise_conv): Conv2dStaticSamePadding(\n        1152, 1152, kernel_size=(3, 3), stride=[1, 1], groups=1152, bias=False\n        (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n      )\n      (_bn1): BatchNorm2d(1152, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_se_reduce): Conv2dStaticSamePadding(\n        1152, 48, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_se_expand): Conv2dStaticSamePadding(\n        48, 1152, kernel_size=(1, 1), stride=(1, 1)\n        (static_padding): Identity()\n      )\n      (_project_conv): Conv2dStaticSamePadding(\n        1152, 320, kernel_size=(1, 1), stride=(1, 1), bias=False\n        (static_padding): Identity()\n      )\n      (_bn2): BatchNorm2d(320, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      (_swish): MemoryEfficientSwish()\n    )\n  )\n  (_conv_head): Conv2dStaticSamePadding(\n    320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False\n    (static_padding): Identity()\n  )\n  (_bn1): BatchNorm2d(1280, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n  (_avg_pooling): AdaptiveAvgPool2d(output_size=1)\n  (_dropout): Dropout(p=0.2, inplace=False)\n  (_fc): Linear(in_features=1280, out_features=1000, bias=True)\n  (_swish): MemoryEfficientSwish()\n)", "parameters": [["_conv_stem.weight", [32, 3, 3, 3]], ["_bn0.weight", [32]], ["_bn0.bias", [32]], ["_blocks.0._depthwise_conv.weight", [32, 1, 3, 3]], ["_blocks.0._bn1.weight", [32]], ["_blocks.0._bn1.bias", [32]], ["_blocks.0._se_reduce.weight", [8, 32, 1, 1]], ["_blocks.0._se_reduce.bias", [8]], ["_blocks.0._se_expand.weight", [32, 8, 1, 1]], ["_blocks.0._se_expand.bias", [32]], ["_blocks.0._project_conv.weight", [16, 32, 1, 1]], ["_blocks.0._bn2.weight", [16]], ["_blocks.0._bn2.bias", [16]], ["_blocks.1._expand_conv.weight", [96, 16, 1, 1]], ["_blocks.1._bn0.weight", [96]], ["_blocks.1._bn0.bias", [96]], ["_blocks.1._depthwise_conv.weight", [96, 1, 3, 3]], ["_blocks.1._bn1.weight", [96]], ["_blocks.1._bn1.bias", [96]], ["_blocks.1._se_reduce.weight", [4, 96, 1, 1]], ["_blocks.1._se_reduce.bias", [4]], ["_blocks.1._se_expand.weight", [96, 4, 1, 1]], ["_blocks.1._se_expand.bias", [96]], ["_blocks.1._project_conv.weight", [24, 96, 1, 1]], ["_blocks.1._bn2.weight", [24]], ["_blocks.1._bn2.bias", [24]], ["_blocks.2._expand_conv.weight", [144, 24, 1, 1]], ["_blocks.2._bn0.weight", [144]], ["_blocks.2._bn0.bias", [144]], ["_blocks.2._depthwise_conv.weight", [144, 1, 3, 3]], ["_blocks.2._bn1.weight", [144]], ["_blocks.2._bn1.bias", [144]], ["_blocks.2._se_reduce.weight", [6, 144, 1, 1]], ["_blocks.2._se_reduce.bias", [6]], ["_blocks.2._se_expand.weight", [144, 6, 1, 1]], ["_blocks.2._se_expand.bias", [144]], ["_blocks.2._project_conv.weight", [24, 144, 1, 1]], ["_blocks.2._bn2.weight", [24]], ["_blocks.2._bn2.bias", [24]], ["_blocks.3._expand_conv.weight", [144, 24, 1, 1]], ["_blocks.3._bn0.weight", [144]], ["_blocks.3._bn0.bias", [144]], ["_blocks.3._depthwise_conv.weight", [144, 1, 5, 5]], ["_blocks.3._bn1.weight", [144]], ["_blocks.3._bn1.bias", [144]], ["_blocks.3._se_reduce.weight", [6, 144, 1, 1]], ["_blocks.3._se_reduce.bias", [6]], ["_blocks.3._se_expand.weight", [144, 6, 1, 1]], ["_blocks.3._se_expand.bias", [144]], ["_blocks.3._project_conv.weight", [40, 144, 1, 1]], ["_blocks.3._bn2.weight", [40]], ["_blocks.3._bn2.bias", [40]], ["_blocks.4._expand_conv.weight", [240, 40, 1, 1]], ["_blocks.4._bn0.weight", [240]], ["_blocks.4._bn0.bias", [240]], ["_blocks.4._depthwise_conv.weight", [240, 1, 5, 5]], ["_blocks.4._bn1.weight", [240]], ["_blocks.4._bn1.bias", [240]], ["_blocks.4._se_reduce.weight", [10, 240, 1, 1]], ["_blocks.4._se_reduce.bias", [10]], ["_blocks.4._se_expand.weight", [240, 10, 1, 1]], ["_blocks.4._se_expand.bias", [240]], ["_blocks.4._project_conv.weight", [40, 240, 1, 1]], ["_blocks.4._bn2.weight", [40]], ["_blocks.4._bn2.bias", [40]], ["_blocks.5._expand_conv.weight", [240, 40, 1, 1]], ["_blocks.5._bn0.weight", [240]], ["_blocks.5._bn0.bias", [240]], ["_blocks.5._depthwise_conv.weight", [240, 1, 3, 3]], ["_blocks.5._bn1.weight", [240]], ["_blocks.5._bn1.bias", [240]], ["_blocks.5._se_reduce.weight", [10, 240, 1, 1]], ["_blocks.5._se_reduce.bias", [10]], ["_blocks.5._se_expand.weight", [240, 10, 1, 1]], ["_blocks.5._se_expand.bias", [240]], ["_blocks.5._project_conv.weight", [80, 240, 1, 1]], ["_blocks.5._bn2.weight", [80]], ["_blocks.5._bn2.bias", [80]], ["_blocks.6._expand_conv.weight", [480, 80, 1, 1]], ["_blocks.6._bn0.weight", [480]], ["_blocks.6._bn0.bias", [480]], ["_blocks.6._depthwise_conv.weight", [480, 1, 3, 3]], ["_blocks.6._bn1.weight", [480]], ["_blocks.6._bn1.bias", [480]], ["_blocks.6._se_reduce.weight", [20, 480, 1, 1]], ["_blocks.6._se_reduce.bias", [20]], ["_blocks.6._se_expand.weight", [480, 20, 1, 1]], ["_blocks.6._se_expand.bias", [480]], ["_blocks.6._project_conv.weight", [80, 480, 1, 1]], ["_blocks.6._bn2.weight", [80]], ["_blocks.6._bn2.bias", [80]], ["_blocks.7._expand_conv.weight", [480, 80, 1, 1]], ["_blocks.7._bn0.weight", [480]], ["_blocks.7._bn0.bias", [480]], ["_blocks.7._depthwise_conv.weight", [480, 1, 3, 3]], ["_blocks.7._bn1.weight", [480]], ["_blocks.7._bn1.bias", [480]], ["_blocks.7._se_reduce.weight", [20, 480, 1, 1]], ["_blocks.7._se_reduce.bias", [20]], ["_blocks.7._se_expand.weight", [480, 20, 1, 1]], ["_blocks.7._se_expand.bias", [480]], ["_blocks.7._project_conv.weight", [80, 480, 1, 1]], ["_blocks.7._bn2.weight", [80]], ["_blocks.7._bn2.bias", [80]], ["_blocks.8._expand_conv.weight", [480, 80, 1, 1]], ["_blocks.8._bn0.weight", [480]], ["_blocks.8._bn0.bias", [480]], ["_blocks.8._depthwise_conv.weight", [480, 1, 5, 5]], ["_blocks.8._bn1.weight", [480]], ["_blocks.8._bn1.bias", [480]], ["_blocks.8._se_reduce.weight", [20, 480, 1, 1]], ["_blocks.8._se_reduce.bias", [20]], ["_blocks.8._se_expand.weight", [480, 20, 1, 1]], ["_blocks.8._se_expand.bias", [480]], ["_blocks.8._project_conv.weight", [112, 480, 1, 1]], ["_blocks.8._bn2.weight", [112]], ["_blocks.8._bn2.bias", [112]], ["_blocks.9._expand_conv.weight", [672, 112, 1, 1]], ["_blocks.9._bn0.weight", [672]], ["_blocks.9._bn0.bias", [672]], ["_blocks.9._depthwise_conv.weight", [672, 1, 5, 5]], ["_blocks.9._bn1.weight", [672]], ["_blocks.9._bn1.bias", [672]], ["_blocks.9._se_reduce.weight", [28, 672, 1, 1]], ["_blocks.9._se_reduce.bias", [28]], ["_blocks.9._se_expand.weight", [672, 28, 1, 1]], ["_blocks.9._se_expand.bias", [672]], ["_blocks.9._project_conv.weight", [112, 672, 1, 1]], ["_blocks.9._bn2.weight", [112]], ["_blocks.9._bn2.bias", [112]], ["_blocks.10._expand_conv.weight", [672, 112, 1, 1]], ["_blocks.10._bn0.weight", [672]], ["_blocks.10._bn0.bias", [672]], ["_blocks.10._depthwise_conv.weight", [672, 1, 5, 5]], ["_blocks.10._bn1.weight", [672]], ["_blocks.10._bn1.bias", [672]], ["_blocks.10._se_reduce.weight", [28, 672, 1, 1]], ["_blocks.10._se_reduce.bias", [28]], ["_blocks.10._se_expand.weight", [672, 28, 1, 1]], ["_blocks.10._se_expand.bias", [672]], ["_blocks.10._project_conv.weight", [112, 672, 1, 1]], ["_blocks.10._bn2.weight", [112]], ["_blocks.10._bn2.bias", [112]], ["_blocks.11._expand_conv.weight", [672, 112, 1, 1]], ["_blocks.11._bn0.weight", [672]], ["_blocks.11._bn0.bias", [672]], ["_blocks.11._depthwise_conv.weight", [672, 1, 5, 5]], ["_blocks.11._bn1.weight", [672]], ["_blocks.11._bn1.bias", [672]], ["_blocks.11._se_reduce.weight", [28, 672, 1, 1]], ["_blocks.11._se_reduce.bias", [28]], ["_blocks.11._se_expand.weight", [672, 28, 1, 1]], ["_blocks.11._se_expand.bias", [672]], ["_blocks.11._project_conv.weight", [192, 672, 1, 1]], ["_blocks.11._bn2.weight", [192]], ["_blocks.11._bn2.bias", [192]], ["_blocks.12._expand_conv.weight", [1152, 192, 1, 1]], ["_blocks.12._bn0.weight", [1152]], ["_blocks.12._bn0.bias", [1152]], ["_blocks.12._depthwise_conv.weight", [1152, 1, 5, 5]], ["_blocks.12._bn1.weight", [1152]], ["_blocks.12._bn1.bias", [1152]], ["_blocks.12._se_reduce.weight", [48, 1152, 1, 1]], ["_blocks.12._se_reduce.bias", [48]], ["_blocks.12._se_expand.weight", [1152, 48, 1, 1]], ["_blocks.12._se_expand.bias", [1152]], ["_blocks.12._project_conv.weight", [192, 1152, 1, 1]], ["_blocks.12._bn2.weight", [192]], ["_blocks.12._bn2.bias", [192]], ["_blocks.13._expand_conv.weight", [1152, 192, 1, 1]], ["_blocks.13._bn0.weight", [1152]], ["_blocks.13._bn0.bias", [1152]], ["_blocks.13._depthwise_conv.weight", [1152, 1, 5, 5]], ["_blocks.13._bn1.weight", [1152]], ["_blocks.13._bn1.bias", [1152]], ["_blocks.13._se_reduce.weight", [48, 1152, 1, 1]], ["_blocks.13._se_reduce.bias", [48]], ["_blocks.13._se_expand.weight", [1152, 48, 1, 1]], ["_blocks.13._se_expand.bias", [1152]], ["_blocks.13._project_conv.weight", [192, 1152, 1, 1]], ["_blocks.13._bn2.weight", [192]], ["_blocks.13._bn2.bias", [192]], ["_blocks.14._expand_conv.weight", [1152, 192, 1, 1]], ["_blocks.14._bn0.weight", [1152]], ["_blocks.14._bn0.bias", [1152]], ["_blocks.14._depthwise_conv.weight", [1152, 1, 5, 5]], ["_blocks.14._bn1.weight", [1152]], ["_blocks.14._bn1.bias", [1152]], ["_blocks.14._se_reduce.weight", [48, 1152, 1, 1]], ["_blocks.14._se_reduce.bias", [48]], ["_blocks.14._se_expand.weight", [1152, 48, 1, 1]], ["_blocks.14._se_expand.bias", [1152]], ["_blocks.14._project_conv.weight", [192, 1152, 1, 1]], ["_blocks.14._bn2.weight", [192]], ["_blocks.14._bn2.bias", [192]], ["_blocks.15._expand_conv.weight", [1152, 192, 1, 1]], ["_blocks.15._bn0.weight", [1152]], ["_blocks.15._bn0.bias", [1152]], ["_blocks.15._depthwise_conv.weight", [1152, 1, 3, 3]], ["_blocks.15._bn1.weight", [1152]], ["_blocks.15._bn1.bias", [1152]], ["_blocks.15._se_reduce.weight", [48, 1152, 1, 1]], ["_blocks.15._se_reduce.bias", [48]], ["_blocks.15._se_expand.weight", [1152, 48, 1, 1]], ["_blocks.15._se_expand.bias", [1152]], ["_blocks.15._project_conv.weight", [320, 1152, 1, 1]], ["_blocks.15._bn2.weight", [320]], ["_blocks.15._bn2.bias", [320]], ["_conv_head.weight", [1280, 320, 1, 1]], ["_bn1.weight", [1280]], ["_bn1.bias", [1280]], ["_fc.weight", [1000, 1280]], ["_fc.bias", [1000]]], "output_shape": [[6, 1280, 1, 1]], "num_parameters": [864, 32, 32, 288, 32, 32, 256, 8, 256, 32, 512, 16, 16, 1536, 96, 96, 864, 96, 96, 384, 4, 384, 96, 2304, 24, 24, 3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 3456, 24, 24, 3456, 144, 144, 3600, 144, 144, 864, 6, 864, 144, 5760, 40, 40, 9600, 240, 240, 6000, 240, 240, 2400, 10, 2400, 240, 9600, 40, 40, 9600, 240, 240, 2160, 240, 240, 2400, 10, 2400, 240, 19200, 80, 80, 38400, 480, 480, 4320, 480, 480, 9600, 20, 9600, 480, 38400, 80, 80, 38400, 480, 480, 4320, 480, 480, 9600, 20, 9600, 480, 38400, 80, 80, 38400, 480, 480, 12000, 480, 480, 9600, 20, 9600, 480, 53760, 112, 112, 75264, 672, 672, 16800, 672, 672, 18816, 28, 18816, 672, 75264, 112, 112, 75264, 672, 672, 16800, 672, 672, 18816, 28, 18816, 672, 75264, 112, 112, 75264, 672, 672, 16800, 672, 672, 18816, 28, 18816, 672, 129024, 192, 192, 221184, 1152, 1152, 28800, 1152, 1152, 55296, 48, 55296, 1152, 221184, 192, 192, 221184, 1152, 1152, 28800, 1152, 1152, 55296, 48, 55296, 1152, 221184, 192, 192, 221184, 1152, 1152, 28800, 1152, 1152, 55296, 48, 55296, 1152, 221184, 192, 192, 221184, 1152, 1152, 10368, 1152, 1152, 55296, 48, 55296, 1152, 368640, 320, 320, 409600, 1280, 1280, 1280000, 1000]}, {"name": "_fc1", "id": 139919429151504, "class_name": "Linear(in_features=1280, out_features=512, bias=True)", "parameters": [["weight", [512, 1280]], ["bias", [512]]], "output_shape": [[6, 512]], "num_parameters": [655360, 512]}, {"name": "_dropout", "id": 139919474521424, "class_name": "Dropout(p=0.1, inplace=False)", "parameters": [], "output_shape": [[6, 512]], "num_parameters": []}, {"name": "_layer_norm1", "id": 139919427946576, "class_name": "LayerNorm((512,), eps=1e-05, elementwise_affine=True)", "parameters": [["weight", [512]], ["bias", [512]]], "output_shape": [[6, 512]], "num_parameters": [512, 512]}, {"name": "_fc2", "id": 139919427946448, "class_name": "Linear(in_features=512, out_features=24, bias=True)", "parameters": [["weight", [24, 512]], ["bias", [24]]], "output_shape": [[6, 24]], "num_parameters": [12288, 24]}, {"name": "_softmax", "id": 139919427946832, "class_name": "Softmax(dim=None)", "parameters": [], "output_shape": [[6, 24]], "num_parameters": []}, {"name": "_loss", "id": 139919427946960, "class_name": "CrossEntropyLoss()", "parameters": [], "output_shape": [[]], "num_parameters": []}], "edges": []}