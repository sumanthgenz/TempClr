GPU available: True, used: True
TPU available: False, using: 0 TPU cores
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]
/home/sgurram/anaconda3/envs/torch_env/lib/python3.7/site-packages/torchaudio/backend/utils.py:54: UserWarning: "sox" backend is being deprecated. The default backend will be changed to "sox_io" backend in 0.8.0 and "sox" backend will be removed in 0.9.0. Please migrate to "sox_io" backend. Please refer to https://github.com/pytorch/audio/issues/903 for the detail.
  '"sox" backend is being deprecated. '
LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1]
initializing ddp: GLOBAL_RANK: 1, MEMBER: 2/2
initializing ddp: GLOBAL_RANK: 0, MEMBER: 1/2

  | Name          | Type             | Params
---------------------------------------------------
0 | _cnn1         | Conv2d           | 30    
1 | _efficientnet | EfficientNet     | 5 M   
2 | _fc1          | Linear           | 655 K 
3 | _fc2          | Linear           | 12 K  
4 | _layer_norm1  | LayerNorm        | 1 K   
5 | _layer_norm2  | LayerNorm        | 48    
6 | _dropout      | Dropout          | 0     
7 | _softmax      | Softmax          | 0     
8 | _loss         | CrossEntropyLoss | 0     
Validation sanity check: 0it [00:00, ?it/s]Validation sanity check:  50%|█████     | 1/2 [00:01<00:01,  1.76s/it]Validation sanity check: 100%|██████████| 2/2 [00:01<00:00,  1.30s/it]                                                                      Training: 0it [00:00, ?it/s]Training:   0%|          | 0/33246 [00:00<?, ?it/s]Epoch 0:   0%|          | 0/33246 [00:00<?, ?it/s] Traceback (most recent call last):
  File "/home/sgurram/Projects/temporal_contrastive_learning/train.py", line 30, in <module>
    trainer.fit(model)
  File "/home/sgurram/anaconda3/envs/torch_env/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 444, in fit
    results = self.accelerator_backend.train()
  File "/home/sgurram/anaconda3/envs/torch_env/lib/python3.7/site-packages/pytorch_lightning/accelerators/ddp_accelerator.py", line 148, in train
    results = self.ddp_train(process_idx=self.task_idx, model=model)
  File "/home/sgurram/anaconda3/envs/torch_env/lib/python3.7/site-packages/pytorch_lightning/accelerators/ddp_accelerator.py", line 282, in ddp_train
    results = self.train_or_test()
  File "/home/sgurram/anaconda3/envs/torch_env/lib/python3.7/site-packages/pytorch_lightning/accelerators/accelerator.py", line 74, in train_or_test
    results = self.trainer.train()
  File "/home/sgurram/anaconda3/envs/torch_env/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 493, in train
    self.train_loop.run_training_epoch()
  File "/home/sgurram/anaconda3/envs/torch_env/lib/python3.7/site-packages/pytorch_lightning/trainer/training_loop.py", line 561, in run_training_epoch
    batch_output = self.run_training_batch(batch, batch_idx, dataloader_idx)
  File "/home/sgurram/anaconda3/envs/torch_env/lib/python3.7/site-packages/pytorch_lightning/trainer/training_loop.py", line 700, in run_training_batch
    self.training_step_and_backward(split_batch, batch_idx, opt_idx, optimizer, self.trainer.hiddens)
  File "/home/sgurram/anaconda3/envs/torch_env/lib/python3.7/site-packages/pytorch_lightning/trainer/training_loop.py", line 813, in training_step_and_backward
    result = self.training_step(split_batch, batch_idx, opt_idx, hiddens)
  File "/home/sgurram/anaconda3/envs/torch_env/lib/python3.7/site-packages/pytorch_lightning/trainer/training_loop.py", line 320, in training_step
    training_step_output = self.trainer.accelerator_backend.training_step(args)
  File "/home/sgurram/anaconda3/envs/torch_env/lib/python3.7/site-packages/pytorch_lightning/accelerators/ddp_accelerator.py", line 158, in training_step
    output = self.trainer.model(*args)
  File "/home/sgurram/anaconda3/envs/torch_env/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/sgurram/anaconda3/envs/torch_env/lib/python3.7/site-packages/pytorch_lightning/overrides/data_parallel.py", line 176, in forward
    output = self.module.training_step(*inputs[0], **kwargs[0])
  File "/home/sgurram/Projects/temporal_contrastive_learning/encoder.py", line 85, in training_step
    loss = self.loss(logits, label)
  File "/home/sgurram/anaconda3/envs/torch_env/lib/python3.7/site-packages/torch/nn/modules/module.py", line 779, in __getattr__
    type(self).__name__, name))
torch.nn.modules.module.ModuleAttributeError: 'TemporalOrderPrediction' object has no attribute 'loss'
